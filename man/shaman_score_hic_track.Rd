% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shaman.R
\name{shaman_score_hic_track}
\alias{shaman_score_hic_track}
\title{generate a score hic track based on observed and expected (shuffled) hic data}
\usage{
shaman_score_hic_track(track_db, work_dir, score_track_nm, obs_track_nms,
  exp_track_nms = paste0(obs_track_nms, "_shuffle"),
  points_track_nms = obs_track_nms, near_cis = 5e+06, expand = 2e+06,
  k = 100, max_jobs = 100)
}
\arguments{
\item{track_db}{Directory of the misha database.}

\item{work_dir}{Centralized directory to store temporary files.}

\item{score_track_nm}{Score track that will be created.}

\item{obs_track_nms}{Names of observed 2D genomic tracks for the hic data. Pooling of multiple
observed tracks is supported.}

\item{exp_track_nms}{Names of expected (shuffled) 2D genomic tracks. Pooling of multiple expected
tracks is supported.}

\item{points_track_nms}{Names of 2D genomic tracks that contain points on which to compute
normalized score. Pooling points from multiple tracks is supported.}

\item{near_cis}{Size of matrix in grid.}

\item{expand}{Size of expansion, points to include outside the matrix for accurate computing of the score.
Note that for each observed point, its k-nearest neighbors must be included in the expanded matrix.}

\item{k}{The number of neighbor distances used for the score. For higher resolution maps, increase k. For
lower resolution maps, decrease k.}

\item{max_jobs}{Maximal number of qsub jobs.}
}
\description{
\code{shaman_score_hic_track}
}
\details{
This function generates a 2D score track based on observed and expected hic data.
The score is computed by generating a grid of small matrices spanning all chromosomes
and computing the score of each matrix independantly.
The model for computing the score relies on the KS D statistic computed for each observed point,
over the distances of the k-nearest neighbors in the observed compared to the expected.
High scores represent contact enrichment while low scores depict insulation.
Note that this function requires either sge (qsub) or multicore to compute in a timely manner.
Parameters can be set via shaman.sge_support or shaman.mc_support in shaman.conf file.

Each step creates temporary files of the matrix scores which are then joined to a track.
Temporary files are deleted upon track creation.
}
